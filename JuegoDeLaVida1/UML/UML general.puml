@startuml
'https://plantuml.com/sequence-diagram

package individuos {
abstract class Individuo{
    -vidas:int
    -reproduccion%:int
    -clonacion%:int
    -tipoAlReproducirse%: int
    -movido: boolean
    -añosVividos: int
    -cola: ListaEnlazada<String>
    ----
    +getters()
    +setters()
    }
    class IndividuoBasico extends Individuo{
    -id: int
    }

    class IndividuoNormal extends Individuo{
    -id: int
    }

    class IndividuoAvanzado extends Individuo{
    -id: int
    }
}
package Recursos {
    abstract class Recurso{
    -tiempoAparicion:int
    -porcentajeAparicion:int
    ----
    getters()
    setters()
    }
    class Agua extends Recurso {
    -porcentajeAparicion2: int
    -turnosVida: int
    ----
    +getters()
    +setters()
    }
    class Comida extends Recurso {
    -porcentajeAparicion2: int
    -turnosVida: int
    ----
    +getters()
    +setters()
    }
    class Montaña extends Recurso {
    -porcentajeAparicion2: int
    -turnosVida: int
    ----
    +getters()
    +setters()
    }
    class Tesoro extends Recurso {
    -porcentajeAparicion2: int
    -porcentajeReproduccion: int
    ----
    +getters()
    +setters()
    }
    class Biblioteca extends Recurso {
    -porcentajeAparicion2: int
    -porcentajeClonacion: int
    ----
    +getters()
    +setters()
    }
    class Pozo extends Recurso {
    -porcentajeAparicion2: int
    ----
    +getters()
    +setters()
    }
}
class ventanaTablero {
}
class tableroController {
}
class ventanaCelda {
}
class celdaController {
}
class helloAplication {
}
class windowsController {
}
class tableroParametros {
}
class parameterController {
}
class cargarPartidaController {
}
class configuracionController {
}
class finalPartidaController {
}
class guardarPartidaController {
}
class Tablero {
-dimensiones: ListaSimple<Integer>
}
class Celda {
-rectangle: Rectangle
-coordenadas: ListaSimple<Integer>
-individuos: ListaEnlazada<Individuo>
-recursos: ListaEnlazada<Recurso>
----
+getters()
+setters()
+addRecurso()
+addIndividuo()
}

@startuml
class PrincipalController {
    -static final Logger log
    -static TableroController tab
    -ListaEnlazada<Individuo> supervivientes
    -ListaEnlazada<Individuo> individuosTotales
    -int tiempoEspera
    -Map<Individuo, ListaEnlazada<Celda>> rutaAvanzada
    -int idIndividuos = 0
    -static int idArcos = 0
    -int turnos
    -boolean pausa
    -ListaSimple<ListaSimple<Celda>> listaCeldas
    -IndividuoTipoBasico individuoTipoBasico
    -IndividuoTipoNormal individuoTipoNormal
    -IndividuoTipoAvanzado individuoTipoAvanzado
    -RecursoAgua recursoAgua
    -RecursoBiblioteca recursoBiblioteca
    -RecursoComida recursoComida
    -RecursoMontaña recursoMontaña
    -RecursoPozo recursoPozo
    -RecursoTesoro recursoTesoro
    -------------
    + PrincipalController(Boolean pausa, IndividuoTipoBasico individuoTipoBasico, IndividuoTipoNormal individuoTipoNormal,
    IndividuoTipoAvanzado individuoTipoAvanzado, RecursoAgua recursoAgua, RecursoComida recursoComida,
    RecursoMontaña recursoMontaña, RecursoTesoro recursoTesoro, RecursoBiblioteca recursoBiblioteca,
     RecursoPozo recursoPozo, ListaSimple<ListaSimple<Celda>> lista, int i, int j, int k, TableroController tableroController,
     ListaEnlazada<Individuo> individuosTotales)

    + void setTiempoEspera(int tiempoEspera)
    + void setIndividuosTotales(ListaEnlazada<Individuo> individuosTotales)
    + TableroController getTab()
    + int getIdIndividuos()
    + int getIdArcos()
    + int getIdentificadorIndividuos()
    + int identificadorArcos()
    + int getTurnos()
    + int identificadorTurnos()
    + ListaSimple<ListaSimple<Celda>> getListaCeldas()
    + IndividuoTipoBasico getIndividuoTipoBasico()
    + IndividuoTipoNormal getIndividuoTipoNormal()
    + IndividuoTipoAvanzado getIndividuoTipoAvanzado()
    + RecursoAgua getRecursoAgua()
    + RecursoBiblioteca getRecursoBiblioteca()
    + RecursoComida getRecursoComida()
    + RecursoMontaña getRecursoMontaña()
    + RecursoPozo getRecursoPozo()
    + RecursoTesoro getRecursoTesoro()
    + boolean isPausa()
    + void setPausa(boolean pausa)
    + void bucleControl()
}

ventanaTablero <-- tableroController
tableroController <- Tablero
ventanaCelda <- celdaController
celdaController <- Celda
PrincipalController <-- celdaController
Celda <- Individuo
tableroController --> PrincipalController
PrincipalController <--- Individuo
PrincipalController <- Recurso
Celda <- Recurso
PrincipalController <-- finalPartidaController
PrincipalController <-- parameterController
helloAplication <- ventanaCelda
helloAplication <- ventanaTablero
PrincipalController <- configuracionController
windowsController <- ventanaTablero
windowsController <- ventanaCelda
tableroParametros <- Tablero
tableroParametros --> PrincipalController
PrincipalController <-- cargarPartidaController
PrincipalController <-- guardarPartidaController


@enduml


class Tablero(Lista) extends Simulador{
-dimensiones:int[2]
-Celdas:Celda[]
 + obtener_celda(coordenadas)
}

class Celda(Nodo){
-coordenadas:int[2]
-Elementos:Elemento[]
+ agregar_elemento(elemento)
+ quitar_elemento(elemento)

}

@enduml